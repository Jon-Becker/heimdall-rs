//! Integration tests for decompile functionality.

#[cfg(test)]
mod integration_tests {
    use std::path::PathBuf;

    use alloy_json_abi::JsonAbi;
    use heimdall_decompiler::{decompile, DecompilerArgs, DecompilerArgsBuilder};
    use serde_json::Value;

    #[tokio::test]
    async fn test_decompile_precompile() {
        let rpc_url = std::env::var("RPC_URL").unwrap_or_else(|_| {
            println!("RPC_URL not set, skipping test");
            std::process::exit(0);
        });

        let result = decompile(DecompilerArgs {
            target: String::from("0x1bf797219482a29013d804ad96d1c6f84fba4c45"),
            rpc_url,
            default: true,
            skip_resolving: true,
            include_solidity: true,
            include_yul: false,
            output: String::from(""),
            name: String::from(""),
            timeout: 10000,
            abi: None,
            openai_api_key: String::from(""),
            llm_postprocess: false,
        })
        .await
        .expect("failed to decompile");

        // assert that the output is correct
        for line in &["function Unresolved_19045a25(uint256 arg0, uint256 arg1) public payable returns (address) {",
            " = ecrecover("] {
            println!("{line}");
            assert!(result.source.as_ref().expect("decompile source is empty").contains(line));
        }
    }

    #[tokio::test]
    async fn test_decompile_edge_case_u256_conversion_overflow_1() {
        let rpc_url = std::env::var("RPC_URL").unwrap_or_else(|_| {
            println!("RPC_URL not set, skipping test");
            std::process::exit(0);
        });

        let _ = decompile(DecompilerArgs {
            target: String::from("0x914d7Fec6aaC8cd542e72Bca78B30650d45643d7"),
            rpc_url,
            default: true,
            skip_resolving: true,
            include_solidity: true,
            include_yul: false,
            output: String::from(""),
            name: String::from(""),
            timeout: 10000,
            abi: None,
            openai_api_key: String::from(""),
            llm_postprocess: false,
        })
        .await
        .expect("failed to decompile");
    }

    #[tokio::test]
    async fn test_decompile_edge_case_u256_conversion_overflow_2() {
        let rpc_url = std::env::var("RPC_URL").unwrap_or_else(|_| {
            println!("RPC_URL not set, skipping test");
            std::process::exit(0);
        });

        let _ = decompile(DecompilerArgs {
            target: String::from("0x5141b82f5ffda4c6fe1e372978f1c5427640a190"),
            rpc_url,
            default: true,
            skip_resolving: true,
            include_solidity: true,
            include_yul: false,
            output: String::from(""),
            name: String::from(""),
            timeout: 10000,
            abi: None,
            openai_api_key: String::from(""),
            llm_postprocess: false,
        })
        .await
        .expect("failed to decompile");
    }

    #[tokio::test]
    async fn test_decompile_edge_case_vec_overflow() {
        let rpc_url = std::env::var("RPC_URL").unwrap_or_else(|_| {
            println!("RPC_URL not set, skipping test");
            std::process::exit(0);
        });

        let _ = decompile(DecompilerArgs {
            target: String::from("0x8579970692bf77fafeeb017f07dec9a8fdb4893d"),
            rpc_url,
            default: true,
            skip_resolving: true,
            include_solidity: true,
            include_yul: false,
            output: String::from(""),
            name: String::from(""),
            timeout: 10000,
            abi: None,
            openai_api_key: String::from(""),
            llm_postprocess: false,
        })
        .await
        .expect("failed to decompile");
    }

    #[tokio::test]
    async fn test_decompile_weth() {
        let rpc_url = std::env::var("RPC_URL").unwrap_or_else(|_| {
            println!("RPC_URL not set, skipping test");
            std::process::exit(0);
        });

        let result = decompile(DecompilerArgs {
            target: String::from("0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"),
            rpc_url,
            default: true,
            skip_resolving: true,
            include_solidity: true,
            include_yul: false,
            output: String::from(""),
            name: String::from(""),
            timeout: 10000,
            abi: None,
            openai_api_key: String::from(""),
            llm_postprocess: false,
        })
        .await
        .expect("failed to decompile");

        // assert that the output is correct
        for line in &[
            "function Unresolved_095ea7b3(address arg0, uint256 arg1) public returns (bool) {",
            "function Unresolved_18160ddd() public view returns (uint256) {",
            "function Unresolved_23b872dd(address arg0, address arg1, uint256 arg2) public returns (bool) {",
            "function Unresolved_2e1a7d4d(uint256 arg0) public {",
            "function Unresolved_70a08231(address arg0) public view returns (uint256) {",
            "function Unresolved_a9059cbb(address arg0, uint256 arg1) public returns (bool) {",
            "function Unresolved_d0e30db0() public payable {",
            "function Unresolved_dd62ed3e(address arg0, address arg1) public view returns (uint256) {"] {
            println!("{line}");
            assert!(result.source.as_ref().expect("decompile source is empty").contains(line));
        }
    }

    #[tokio::test]
    async fn test_decompile_ctf() {
        let rpc_url = std::env::var("RPC_URL").unwrap_or_else(|_| {
            println!("RPC_URL not set, skipping test");
            std::process::exit(0);
        });

        let result = decompile(DecompilerArgs {
            target: String::from("0x9f00c43700bc0000Ff91bE00841F8e04c0495000"),
            rpc_url,
            default: true,
            skip_resolving: true,
            include_solidity: true,
            include_yul: false,
            output: String::from(""),
            name: String::from(""),
            timeout: 10000,
            abi: None,
            openai_api_key: String::from(""),
            llm_postprocess: false,
        })
        .await
        .expect("failed to decompile");

        // assert that the output is correct
        for line in &["function Unresolved_2fa61cd8(address arg0) public view returns (uint16) {",
            "function Unresolved_41161b10(uint240 arg0, address arg1) public payable returns (bool) {",
            "constant unresolved_06fdde03"] {
            println!("{line}");
            assert!(result.source.as_ref().expect("decompile source is empty").contains(line));
        }
    }

    #[tokio::test]
    async fn test_decompile_vyper() {
        let result = decompile(DecompilerArgs {
            target: String::from("0x5f3560e01c63fdf80bda811861005d57602436103417610061576004358060a01c610061576040525f5c6002146100615760025f5d6040515a595f5f36365f8537835f8787f1905090509050610057573d5f5f3e3d5ffd5b60035f5d005b5f5ffd5b5f80fd"),
            rpc_url: String::from(""),
            default: true,
            skip_resolving: true,
            include_solidity: false,
            include_yul: true,
            output: String::from(""),
            name: String::from(""),
            timeout: 10000,
            abi: None,
            openai_api_key: String::from(""),
            llm_postprocess: false,

        })
        .await
        .expect("failed to decompile");

        // assert that the output is correct
        for line in &[
            "default {",
            "if eq(0x02, tload(0)) { revert(0, 0); } else {",
            "tstore(0, 0x02)",
            "call(gas(), mload(0x40), 0, msize(), calldatasize(), 0, 0)",
        ] {
            println!("{line}");
            assert!(result.source.as_ref().expect("decompile source is empty").contains(line));
        }
    }

    #[tokio::test]
    async fn test_decompile_clamping() {
        // NOTE: this test is only checking for runtime. decompilation *must* finish within 5
        // seconds, or the test fails.
        let start = std::time::Instant::now();
        let _ = decompile(DecompilerArgs {
            target: String::from("0x608060405260043610610183575f3560e01c80637d6a4568116100d5578063b761ed3c1161007e578063cc7b4f8b11610058578063cc7b4f8b14610694578063d9c45357146106b3578063f2fde38b146106c65761018a565b8063b761ed3c1461061b578063bf298c341461063a578063c683630d146106595761018a565b80639ccfd8c1116100af5780639ccfd8c1146105aa578063ad5c4648146105c9578063b171d294146105fc5761018a565b80637d6a4568146105215780638b674f5d146105625780638da5cb5b146105815761018a565b80633334e66311610137578063715018a611610111578063715018a6146104cf578063774b6b7e146104e357806378e3214f146105025761018a565b80633334e663146104725780633d4a345c14610485578063460690f4146104a45761018a565b80630b129abf116101685780630b129abf146103f1578063263cc4fd1461043257806333320de3146104535761018a565b806303a18fa31461037757806308f2cc54146103b95761018a565b3661018a57005b348015610195575f5ffd5b505f80357fffffffff0000000000000000000000000000000000000000000000000000000016815260036020908152604080832054815136601f8101859004850282018501909352828152919260609273ffffffffffffffffffffffffffffffffffffffff90921691859182908690819084018382808284375f92019190915250929350505073ffffffffffffffffffffffffffffffffffffffff831690506102c8577f61f598cd000000000000000000000000000000000000000000000000000000005f819052600360209081527fd56a229876ba4a58895db4a079f0d0efdde0ead5de385f5ccf8d9ca2e29196865490830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690921790915273ffffffffffffffffffffffffffffffffffffffff1691505b5f5f8373ffffffffffffffffffffffffffffffffffffffff16836040516102ef919061281b565b5f60405180830381855af49150503d805f8114610327576040519150601f19603f3d011682016040523d82523d5f602084013e61032c565b606091505b509150915081610368576040517f221f615800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80519650602001945050505050f35b348015610382575f5ffd5b506001546103a39073ffffffffffffffffffffffffffffffffffffffff1681565b6040516103b09190612852565b60405180910390f35b3480156103c4575f5ffd5b506103e46103d336600461287e565b60076020525f908152604090205481565b6040516103b091906128aa565b3480156103fc575f5ffd5b506103a361040b3660046128eb565b60046020525f908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561043d575f5ffd5b5061045161044c36600461287e565b6106e5565b005b34801561045e575f5ffd5b5061045161046d366004612abe565b610734565b610451610480366004612d5f565b6107ec565b348015610490575f5ffd5b5061045161049f366004612e89565b610b5b565b3480156104af575f5ffd5b506103e46104be36600461287e565b60066020525f908152604090205481565b3480156104da575f5ffd5b50610451610c5e565b3480156104ee575f5ffd5b506104516104fd366004612f3b565b610c71565b34801561050d575f5ffd5b5061045161051c366004612fb9565b610e4c565b34801561052c575f5ffd5b506103a361053b3660046128eb565b60036020525f908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561056d575f5ffd5b5061045161057c366004612fe9565b610e9e565b34801561058c575f5ffd5b505f5473ffffffffffffffffffffffffffffffffffffffff166103a3565b3480156105b5575f5ffd5b506104516105c436600461302e565b610f37565b3480156105d4575f5ffd5b506103a37f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b348015610607575f5ffd5b50610451610616366004612fb9565b610fb5565b348015610626575f5ffd5b5061045161063536600461305e565b611084565b348015610645575f5ffd5b50610451610654366004612e89565b6110cc565b348015610664575f5ffd5b5061068761067336600461287e565b60056020525f908152604090205460ff1681565b6040516103b09190613084565b34801561069f575f5ffd5b506104516106ae366004612fb9565b6111cf565b6104516106c1366004612fe9565b611290565b3480156106d1575f5ffd5b506104516106e036600461287e565b61130c565b6106ed611376565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61073c611376565b8051825114610749575f5ffd5b5f5b82518110156107e75781818151811061076657610766613092565b602002602001015160055f85848151811061078357610783613092565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff1682528101919091526040015f2080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905560010161074b565b505050565b8142811015610827576040517f203d82d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b335f9081526005602052604090205460ff1661086f576040517f584a793800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff87160361091e577f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b158015610906575f5ffd5b505af1158015610918573d5f5f3e3d5ffd5b50505050505b5f5b87518110156109a0575f5f5b89838151811061093e5761093e613092565b6020026020010151518110156109965761098c8a848151811061096357610963613092565b6020026020010151828151811061097c5761097c613092565b60200260200101518385846113c6565b915060010161092c565b5050600101610920565b505f6109ab8661162d565b905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff871603610ab057805f036109eb575f610a0f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01805b506040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21690632e1a7d4d90610a829084906004016128aa565b5f604051808303815f87803b158015610a99575f5ffd5b505af1158015610aab573d5f5f3e3d5ffd5b505050505b825115610ac557610ac283878361176d565b90505b5f610acf8861162d565b9050610b118887835f03610ae3575f610b0a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90930192835b6001611946565b610b508787845f03610b23575f610b4a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193845b5f611946565b505050505050505050565b610b63611376565b8051825114610b9e576040517f1df89e8b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b82518110156107e757818181518110610bbb57610bbb613092565b602002602001015160045f858481518110610bd857610bd8613092565b6020908102919091018101517fffffffff000000000000000000000000000000000000000000000000000000001682528101919091526040015f2080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055600101610ba0565b610c66611376565b610c6f5f611a43565b565b335f9081526005602052604090205460ff16610cb9576040517f584a793800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610cc38561162d565b905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff861603610dc857805f03610d03575f610d27565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01805b506040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21690632e1a7d4d90610d9a9084906004016128aa565b5f604051808303815f87803b158015610db1575f5ffd5b505af1158015610dc3573d5f5f3e3d5ffd5b505050505b8115610e1357610e1083838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525089925085915061176d9050565b90505b5f610e1d8761162d565b9050610e318786835f03610ae3575f610b0a565b610e438686845f03610b23575f610b4a565b50505050505050565b610e54611376565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff831603610e9357610e8f3382611ab7565b5050565b610e8f823383611b72565b335f9081526005602052604090205460ff16610ee6576040517f584a793800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610ef3828401846130bf565b90505f5f5b8251811015610f3057610f26838281518110610f1657610f16613092565b6020026020010151835f846113c6565b9150600101610ef8565b5050505050565b610f3f611376565b7fffffffff00000000000000000000000000000000000000000000000000000000919091165f90815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b610fbd611376565b73ffffffffffffffffffffffffffffffffffffffff821661100a576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015806110265750612710811115801561102657506113888110155b61105c576040517f2757d13000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff9091165f90815260066020526040902055565b61108c611376565b60648110156110c7576040517fd3800fe100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600255565b6110d4611376565b805182511461110f576040517f1df89e8b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b82518110156107e75781818151811061112c5761112c613092565b602002602001015160035f85848151811061114957611149613092565b6020908102919091018101517fffffffff000000000000000000000000000000000000000000000000000000001682528101919091526040015f2080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055600101611111565b6111d7611376565b73ffffffffffffffffffffffffffffffffffffffff8216611224576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b801580611232575060648110155b611268576040517f2757d13000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff9091165f90815260076020526040902055565b335f9081526005602052604090205460ff166112d8576040517f584a793800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6112e5828401846131c2565b90506107e7815f015182602001518360400151846060015185608001518660a001516107ec565b611314611376565b73ffffffffffffffffffffffffffffffffffffffff811661136a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136190613256565b60405180910390fd5b61137381611a43565b50565b5f5473ffffffffffffffffffffffffffffffffffffffff163314610c6f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113619061329a565b5f7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff841061141c576040517ffd4babfc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6020808601517fffffffff0000000000000000000000000000000000000000000000000000000081165f9081526004909252604090912054819073ffffffffffffffffffffffffffffffffffffffff16806114a3576040517fdec9523700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60e08263ffffffff16901b871796505f5f8273ffffffffffffffffffffffffffffffffffffffff16858b5f01518b6040516020016114e29291906132f9565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261151e9291602001613341565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526115569161281b565b5f60405180830381855af49150503d805f811461158e576040519150601f19603f3d011682016040523d82523d5f602084013e611593565b606091505b50915091508161160b576115d8816115aa8a611c9b565b6115b38a611c9b565b6040516020016115c492919061335c565b604051602081830303815290604052611d58565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113619190613413565b8080602001905181019061161f919061342f565b9a9950505050505050505050565b5f73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff831603611716576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc216906370a08231906116d1903090600401612852565b602060405180830381865afa1580156116ec573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611710919061342f565b92915050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906370a08231906116d1903090600401612852565b919050565b5f5f611779858461215e565b604081015160208201519192500180156119395780840393508160a001515f0361180657608082015173ffffffffffffffffffffffffffffffffffffffff16156117d1576117d185836080015184602001515f611946565b815173ffffffffffffffffffffffffffffffffffffffff16156118015761180185835f015184604001515f611946565b611874565b8160a0015160010361184257608082015173ffffffffffffffffffffffffffffffffffffffff161561180157611801858360800151835f611946565b6040517f2e573a3f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815f015173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16836080015173ffffffffffffffffffffffffffffffffffffffff167f4bc8151c051441255339d01fbaeb38cf109cbfd75e9a5c62fb8f1dfb37fe6fd68486604001516040516118f592919061344d565b60405180910390a47fbf402572f7d269fcae3a56e497d9fc9459e32213d9286c383ad57fa2b532fa8f8260a0015160405161193091906128aa565b60405180910390a15b83925050505b9392505050565b8115611a3d5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff851603611a32578015611a23576040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21690632e1a7d4d906119f59085906004016128aa565b5f604051808303815f87803b158015611a0c575f5ffd5b505af1158015611a1e573d5f5f3e3d5ffd5b505050505b611a2d8383611ab7565b611a3d565b611a3d848484611b72565b50505050565b5f805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805f03611ac2575050565b604080515f8082526020820190925273ffffffffffffffffffffffffffffffffffffffff8416908390604051611af8919061281b565b5f6040518083038185875af1925050503d805f8114611b32576040519150601f19603f3d011682016040523d82523d5f602084013e611b37565b606091505b50509050806107e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611361906134c1565b805f03611b7e57505050565b5f5f8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611baf9291906134d1565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611bfd919061281b565b5f604051808303815f865af19150503d805f8114611c36576040519150601f19603f3d011682016040523d82523d5f602084013e611c3b565b606091505b5091509150818015611c65575080511580611c65575080806020019051810190611c6591906134ea565b610f30576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113619061353b565b60605f611ca78361245c565b60010190505f8167ffffffffffffffff811115611cc657611cc6612909565b6040519080825280601f01601f191660200182016040528015611cf0576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084611cfa575b509392505050565b60606044835110158015611dc45750825f81518110611d7957611d79613092565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167f0800000000000000000000000000000000000000000000000000000000000000145b8015611e29575082600181518110611dde57611dde613092565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167fc300000000000000000000000000000000000000000000000000000000000000145b8015611e8e575082600281518110611e4357611e43613092565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167f7900000000000000000000000000000000000000000000000000000000000000145b8015611ef3575082600381518110611ea857611ea8613092565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167fa000000000000000000000000000000000000000000000000000000000000000145b15611f6f57604483810180519091611f0b9190613578565b84511015611f45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611361906135be565b8281604051602001611f589291906135fa565b604051602081830303815290604052915050611710565b82516024148015611fd85750825f81518110611f8d57611f8d613092565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167f4e00000000000000000000000000000000000000000000000000000000000000145b801561203d575082600181518110611ff257611ff2613092565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167f4800000000000000000000000000000000000000000000000000000000000000145b80156120a257508260028151811061205757612057613092565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167f7b00000000000000000000000000000000000000000000000000000000000000145b80156121075750826003815181106120bc576120bc613092565b6020910101517fff00000000000000000000000000000000000000000000000000000000000000167f7100000000000000000000000000000000000000000000000000000000000000145b1561212c5760248301518261211b8261253d565b604051602001611f58929190613673565b8161213684612563565b604051602001612147929190613689565b604051602081830303815290604052905092915050565b6121bd6040518060c001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81525090565b6020835111156123bf575f838060200190518101906121dc9190613728565b905060808160200151901c81602001516fffffffffffffffffffffffffffffffff16018311156123b95760408082015173ffffffffffffffffffffffffffffffffffffffff16608084018190525f90815260066020529081205490819003612270576040517f584a793800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815161ffff1660a0840152815160101c69ffffffffffffffffffff6127108390038116908216106122a55781612710036122a7565b805b835160601c8086526020808601515f92835260079091526040909120549192506fffffffffffffffffffffffffffffffff1686039080156122f75761271087820204808311156122f5578092505b505b612710828502046020870152855173ffffffffffffffffffffffffffffffffffffffff1661232b57602086018290526123a2565b856080015173ffffffffffffffffffffffffffffffffffffffff16865f015173ffffffffffffffffffffffffffffffffffffffff16036123895760208601805161271069ffffffffffffffffffff86168502040190525f86526123a2565b61271069ffffffffffffffffffff841683020460408701525b506040850151602086015190910303606085015250505b50611710565b8251602003611710575f838060200190518101906123dd919061342f565b9050608081901c816fffffffffffffffffffffffffffffffff1601831115612455576fffffffffffffffffffffffffffffffff8116830360208301819052600254612710908502049081101561243557602083018190525b5060015473ffffffffffffffffffffffffffffffffffffffff1660808301525b5092915050565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106124a4577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106124d0576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106124ee57662386f26fc10000830492506010015b6305f5e1008310612506576305f5e100830492506008015b612710831061251a57612710830492506004015b6064831061252c576064830492506002015b600a83106117105760010192915050565b6060611710826040516020016125539190613746565b6040516020818303038152906040525b80516060907f3031323334353637383961626364656600000000000000000000000000000000905f9061259790600261375a565b6125a2906002613578565b67ffffffffffffffff8111156125ba576125ba612909565b6040519080825280601f01601f1916602001820160405280156125e4576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f8151811061261a5761261a613092565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061267c5761267c613092565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f5b8451811015611d50578260048683815181106126ca576126ca613092565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c60f81c6010811061270657612706613092565b1a60f81b8261271683600261375a565b612721906002613578565b8151811061273157612731613092565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053508285828151811061277257612772613092565b60209101015160f81c600f166010811061278e5761278e613092565b1a60f81b8261279e83600261375a565b6127a9906003613578565b815181106127b9576127b9613092565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053506001016126ac565b8281835e505f910152565b5f612803825190565b6128118185602086016127ef565b9290920192915050565b5f61193f82846127fa565b5f73ffffffffffffffffffffffffffffffffffffffff8216611710565b61284c81612826565b82525050565b602081016117108284612843565b61286981612826565b8114611373575f5ffd5b803561171081612860565b5f60208284031215612891576128915f5ffd5b5f61289c8484612873565b949350505050565b8061284c565b6020810161171082846128a4565b7fffffffff000000000000000000000000000000000000000000000000000000008116612869565b8035611710816128b8565b5f602082840312156128fe576128fe5f5ffd5b5f61289c84846128e0565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff8211171561297a5761297a612909565b6040525050565b5f61298b60405190565b90506117688282612936565b5f67ffffffffffffffff8211156129b0576129b0612909565b5060209081020190565b5f6129cc6129c784612997565b612981565b838152905060208082019084028301858111156129ea576129ea5f5ffd5b835b81811015612a0e57806129ff8882612873565b845250602092830192016129ec565b5050509392505050565b5f82601f830112612a2a57612a2a5f5ffd5b813561289c8482602086016129ba565b801515612869565b803561171081612a3a565b5f612a5a6129c784612997565b83815290506020808201908402830185811115612a7857612a785f5ffd5b835b81811015612a0e5780612a8d8882612a42565b84525060209283019201612a7a565b5f82601f830112612aae57612aae5f5ffd5b813561289c848260208601612a4d565b5f5f60408385031215612ad257612ad25f5ffd5b823567ffffffffffffffff811115612aeb57612aeb5f5ffd5b612af785828601612a18565b925050602083013567ffffffffffffffff811115612b1657612b165f5ffd5b612b2285828601612a9c565b9150509250929050565b5f67ffffffffffffffff821115612b4557612b45612909565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011660200192915050565b82818337505f910152565b5f612b8c6129c784612b2c565b905082815260208101848484011115612ba657612ba65f5ffd5b611d50848285612b74565b5f82601f830112612bc357612bc35f5ffd5b813561289c848260208601612b7f565b80612869565b803561171081612bd3565b5f60408284031215612bf757612bf75f5ffd5b612c016040612981565b9050813567ffffffffffffffff811115612c1c57612c1c5f5ffd5b612c2884828501612bb1565b8252506020612c3984848301612bd9565b60208301525092915050565b5f612c526129c784612997565b83815290506020808201908402830185811115612c7057612c705f5ffd5b835b81811015612a0e57803567ffffffffffffffff811115612c9357612c935f5ffd5b808601612ca08982612be4565b8552505060209283019201612c72565b5f82601f830112612cc257612cc25f5ffd5b813561289c848260208601612c45565b5f612cdf6129c784612997565b83815290506020808201908402830185811115612cfd57612cfd5f5ffd5b835b81811015612a0e57803567ffffffffffffffff811115612d2057612d205f5ffd5b808601612d2d8982612cb0565b8552505060209283019201612cff565b5f82601f830112612d4f57612d4f5f5ffd5b813561289c848260208601612cd2565b5f5f5f5f5f5f60c08789031215612d7757612d775f5ffd5b863567ffffffffffffffff811115612d9057612d905f5ffd5b612d9c89828a01612d3d565b9650506020612dad89828a01612873565b9550506040612dbe89828a01612873565b9450506060612dcf89828a01612873565b9350506080612de089828a01612bd9565b92505060a087013567ffffffffffffffff811115612dff57612dff5f5ffd5b612e0b89828a01612bb1565b9150509295509295509295565b5f612e256129c784612997565b83815290506020808201908402830185811115612e4357612e435f5ffd5b835b81811015612a0e5780612e5888826128e0565b84525060209283019201612e45565b5f82601f830112612e7957612e795f5ffd5b813561289c848260208601612e18565b5f5f60408385031215612e9d57612e9d5f5ffd5b823567ffffffffffffffff811115612eb657612eb65f5ffd5b612ec285828601612e67565b925050602083013567ffffffffffffffff811115612ee157612ee15f5ffd5b612b2285828601612a18565b5f5f83601f840112612f0057612f005f5ffd5b50813567ffffffffffffffff811115612f1a57612f1a5f5ffd5b602083019150836001820283011115612f3457612f345f5ffd5b9250929050565b5f5f5f5f5f60808688031215612f5257612f525f5ffd5b5f612f5d8888612873565b9550506020612f6e88828901612873565b9450506040612f7f88828901612873565b935050606086013567ffffffffffffffff811115612f9e57612f9e5f5ffd5b612faa88828901612eed565b92509250509295509295909350565b5f5f60408385031215612fcd57612fcd5f5ffd5b5f612fd88585612873565b9250506020612b2285828601612bd9565b5f5f60208385031215612ffd57612ffd5f5ffd5b823567ffffffffffffffff811115613016576130165f5ffd5b61302285828601612eed565b92509250509250929050565b5f5f60408385031215613042576130425f5ffd5b5f61304d85856128e0565b9250506020612b2285828601612873565b5f60208284031215613071576130715f5ffd5b5f61289c8484612bd9565b80151561284c565b60208101611710828461307c565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f602082840312156130d2576130d25f5ffd5b813567ffffffffffffffff8111156130eb576130eb5f5ffd5b61289c84828501612cb0565b5f60c0828403121561310a5761310a5f5ffd5b61311460c0612981565b9050813567ffffffffffffffff81111561312f5761312f5f5ffd5b61313b84828501612d3d565b825250602061314c84848301612873565b602083015250604061316084828501612873565b604083015250606061317484828501612873565b606083015250608061318884828501612bd9565b60808301525060a082013567ffffffffffffffff8111156131aa576131aa5f5ffd5b6131b684828501612bb1565b60a08301525092915050565b5f602082840312156131d5576131d55f5ffd5b813567ffffffffffffffff8111156131ee576131ee5f5ffd5b61289c848285016130f7565b602681525f602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015291505b5060400190565b60208082528101611710816131fa565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081525f5b5060200190565b6020808252810161171081613266565b5f6132b3825190565b8084526020840193506132ca8185602086016127ef565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b6040808252810161330a81856132aa565b905061193f60208301846128a4565b7fffffffff00000000000000000000000000000000000000000000000000000000811661284c565b5f61334c8285613319565b60048201915061289c82846127fa565b7f7377617053696e676c65506f6f6c206661696c65642061742073657175656e6381527f653a20000000000000000000000000000000000000000000000000000000000060208201526023015f6133b382856127fa565b7f20686f703a200000000000000000000000000000000000000000000000000000815260060191506133e582846127fa565b7f3a200000000000000000000000000000000000000000000000000000000000008152600201949350505050565b6020808252810161193f81846132aa565b805161171081612bd3565b5f60208284031215613442576134425f5ffd5b5f61289c8484613424565b6040810161345b82856128a4565b61193f60208301846128a4565b602381525f602082017f5472616e7366657248656c7065723a204554485f5452414e534645525f46414981527f4c454400000000000000000000000000000000000000000000000000000000006020820152915061324f565b6020808252810161171081613468565b6040810161345b8285612843565b805161171081612a3a565b5f602082840312156134fd576134fd5f5ffd5b5f61289c84846134df565b601f81525f602082017f5472616e7366657248656c7065723a205452414e534645525f4641494c45440081529150613293565b6020808252810161171081613508565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b808201808211156117105761171061354b565b601581525f602082017f496e76616c69642072657665727420726561736f6e000000000000000000000081529150613293565b602080825281016117108161358b565b7f4572726f7228000000000000000000000000000000000000000000000000000081525f5b5060060190565b5f61360582856127fa565b9150613610826135ce565b915061361c82846127fa565b7f2900000000000000000000000000000000000000000000000000000000000000815291506001820161289c565b7f50616e696328000000000000000000000000000000000000000000000000000081525f6135f3565b5f61367e82856127fa565b91506136108261364a565b5f61369482856127fa565b7f556e6b6e6f776e280000000000000000000000000000000000000000000000008152915060088201613610565b805161171081612860565b5f606082840312156136e0576136e05f5ffd5b6136ea6060612981565b90505f6136f78484613424565b825250602061370884848301613424565b602083015250604061371c848285016136c2565b60408301525092915050565b5f6060828403121561373b5761373b5f5ffd5b5f61289c84846136cd565b5f61375182846128a4565b50602001919050565b8181028082158382048514176124555761245561354b56fea26469706673582212206caceb7d8f3e31d1c356ad67ffac65465e1d4098c754000ea26df795da861b5464736f6c634300081c0033"),
            rpc_url: String::from(""),
            default: true,
            skip_resolving: true,
            include_solidity: false,
            include_yul: true,
            output: String::from(""),
            name: String::from(""),
            timeout: 10000,
            abi: None,
            openai_api_key: String::from(""),
            llm_postprocess: false,

        })
        .await
        .expect("failed to decompile");

        // assert that runtime <= 3000 ms
        let end = std::time::Instant::now();
        let runtime = end.duration_since(start);
        assert!(runtime.as_millis() <= 3000, "decompile took too long: {} ms", runtime.as_millis());
    }

    #[tokio::test]
    async fn test_decompile_huff() {
        let result = decompile(DecompilerArgs {
            target: String::from("0x5f3560e01c806306fdde03146100295780632fa61cd81461004457806341161b1014610058575f5ffd5b60205f52684c61627972696e7468602952600960205260605ff35b6004355f524360205260405f205f5260205ff35b6004356024355f5f61020d565b60016100b2565b61021f57610149565b806100f9565b5f6100ca565b61012d57610278565b086101c7565b61012d57610249565b60026100e6565b526101b3565b806100f2565b82610114565b5f6100a0565b016100c4565b91610154565b906101c1565bf35b60016100ec565b6010610108565b836101a7565b9361017d565b146101f7565b01610100565b6001610234565b6003610143565b9161014f565bf35b83610159565b0261013d565b60ff61019b565b10610240565b836101cd565b1661023a565b602061026c565b6101ba576100a6565b1c610255565b1461027e565b80610099565b61024f565b61024f565b066101a1565b036100be565b16610192565b90610226565b81610272565b916101e1565b106101e8565b016101db565b6100655761016b565b61012d576100ac565b14610189565b15610090565b1c61022d565b15610134565b602061007b565b6010610171565b50610213565b15610081565b600161008a565b600261010e565b80610206565b6010610183565b61012d5761025c565b91610267565b6100d357610075565b806100e0565b60ff61011b565b82610261565b61020d565b600161015f565b6010610121565b60016100b8565b6001610165565b1461006c565b806101ad565b61012d576101f1565b91610218565b846100da565b6003610127565b61024f565b816101d4565b61024f565b5f610106565b03610200565b916100cc565b61017757"),
            rpc_url: String::from(""),
            default: true,
            skip_resolving: true,
            include_solidity: false,
            include_yul: true,
            output: String::from(""),
            name: String::from(""),
            timeout: 10000,
            abi: None,
            openai_api_key: String::from(""),
            llm_postprocess: false,

        })
        .await
        .expect("failed to decompile");

        // assert that the output is correct
        for line in &["case 0x41161b10", "case 0x06fdde03", "mstore(0, 0x01)", "return(0, 0x20)"] {
            println!("{line}");
            assert!(result.source.as_ref().expect("decompile source is empty").contains(line));
        }
    }

    #[tokio::test]
    async fn test_decompile_base_edge_case_abi() {
        let _ = decompile(DecompilerArgs {
            target: String::from(""),
            rpc_url: String::from(""),
            openai_api_key: String::from(""),
            llm_postprocess: false,
            default: true,
            skip_resolving: true,
            include_solidity: true,
            include_yul: false,
            output: String::from(""),
            name: String::from(""),
            timeout: 10000,
            abi: None,

        })
        .await
        .expect("failed to decompile");
    }

    #[tokio::test]
    #[ignore]
    async fn heavy_integration_test() {
        let root_dir = PathBuf::from(env!("CARGO_MANIFEST_DIR"))
            .parent()
            .expect("no parent")
            .parent()
            .expect("no parent")
            .to_owned();

        // if the ./largest1k directory does not exist, download it from https://jbecker.dev/data/largest1k.tar.gz
        let dataset_dir = root_dir.join("largest1k");
        if !dataset_dir.exists() {
            eprintln!("dataset not found in root, skipping test");
            std::process::exit(0);
        }

        // list files in root_dir
        let contracts = std::fs::read_dir(dataset_dir)
            .expect("failed to read dataset directory")
            .map(|res| {
                // HashMap from filename (without extension) to bytecode (from serde_json::Value)
                res.map(|e| {
                    let path = e.path();
                    let filename = path
                        .file_stem()
                        .expect("no file stem")
                        .to_str()
                        .expect("no file stem")
                        .to_owned();

                    // read contents as json and parse to serde_json::Value
                    let contents_json: Value = serde_json::from_str(
                        &std::fs::read_to_string(path).expect("failed to read file"),
                    )
                    .expect("failed to parse json");
                    let bytecode = contents_json["code"].as_str().expect("no bytecode").to_owned();

                    (filename, bytecode)
                })
            })
            .collect::<Result<Vec<_>, std::io::Error>>()
            .expect("failed to collect files");

        // define flag checks
        let mut is_function_covered = false;
        let mut is_event_covered = false;
        let mut is_require_covered = false;
        let mut is_error_covered = false;

        let mut success_count = 0;
        let mut fail_count = 0;

        for (contract_address, bytecode) in contracts {
            println!("Testing contract: {contract_address}");
            let args = DecompilerArgsBuilder::new()
                .target(bytecode)
                .skip_resolving(true)
                .include_solidity(true)
                .timeout(10000)
                .build()
                .expect("failed to build args");

            let result = match decompile(args).await.map_err(|e| {
                eprintln!("failed to decompile {contract_address}: {e}");
                e
            }) {
                Ok(result) => {
                    success_count += 1;
                    result
                }
                Err(_) => {
                    fail_count += 1;
                    continue;
                }
            };

            let output = result.source.expect("decompile source is empty");

            // perform flag checks
            if output.contains("function Unresolved_") {
                is_function_covered = true;
            }
            if output.contains("event Event_") {
                is_event_covered = true;
            }
            if output.contains("require(") {
                is_require_covered = true;
            }
            if output.contains("error CustomError_") {
                is_error_covered = true;
            }

            let abi_serialized = serde_json::to_string(&result.abi).unwrap();
            let abi_deserialized = JsonAbi::from_json_str(&abi_serialized);
            assert!(abi_deserialized.is_ok());
        }

        // assert that all flags are true
        assert!(is_function_covered);
        assert!(is_event_covered);
        assert!(is_require_covered);
        assert!(is_error_covered);

        // assert 99% success rate
        assert!(
            success_count as f64 / (success_count + fail_count) as f64 > 0.99,
            "success rate is less than 99%"
        );
    }

    #[tokio::test]
    async fn test_decompile_extended_abi() {
        // Test that the extended ABI includes selector and signature fields
        let bytecode = "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80636057361d1461003b5780638bab8dd514610057575b600080fd5b610055600480360381019061005091906101a3565b610087565b005b610071600480360381019061006c9190610158565b610091565b60405161007e91906101db565b60405180910390f35b8060008190555050565b6000816040516100a19190610181565b908152602001604051809103902060009054906101000a900460ff169050919050565b600080fd5b600080fd5b6000819050919050565b6100e2816100cf565b81146100ed57600080fd5b50565b6000813590506100ff816100d9565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261012a576101296100ff565b5b8235905067ffffffffffffffff81111561014757610146610104565b5b60208301915083600182028301111561016357610162610109565b5b9250929050565b60008060208385031215610181576101806100c5565b5b600083013567ffffffffffffffff81111561019f5761019e6100ca565b5b6101ab85828601610114565b92509250509250929050565b6000602082840312156101cd576101cc6100c5565b5b60006101db848285016100f0565b91505092915050565b60008115159050919050565b6101fa816101e4565b82525050565b600060208201905061021560008301846101f1565b92915050565b600081519050919050565b600081905092915050565b60005b8381101561024f578082015181840152602081019050610234565b8381111561025e576000848401525b50505050565b600061026f8261021b565b6102798185610226565b9350610289818560208601610231565b80840191505092915050565b60006102a18284610264565b91508190509291505056fea264697066735822122001c9bb0054b2e989dde58e82a86834274d784bd6503669a5b973edc73f03fa9d64736f6c634300080f0033";

        let args = DecompilerArgsBuilder::new()
            .target(bytecode.to_string())
            .skip_resolving(true)
            .include_solidity(true)
            .timeout(10000)
            .build()
            .expect("failed to build args");

        let result = decompile(args).await.expect("failed to decompile");

        // Check that the standard ABI is valid
        let abi_serialized = serde_json::to_string(&result.abi).unwrap();
        let abi_deserialized = JsonAbi::from_json_str(&abi_serialized);
        assert!(abi_deserialized.is_ok());

        // Check that the extended ABI contains selector and signature fields
        let extended_abi = &result.abi_with_details;

        // The extended ABI is an array of ABI items
        assert!(extended_abi.is_array(), "Extended ABI should be an array");
        let abi_items = extended_abi.as_array().unwrap();
        assert!(!abi_items.is_empty(), "Extended ABI should contain items");

        // Group items by type
        let mut functions = Vec::new();
        let mut events = Vec::new();
        let mut errors = Vec::new();

        for item in abi_items {
            assert!(item.is_object());
            let item_obj = item.as_object().unwrap();

            if let Some(item_type) = item_obj.get("type").and_then(|v| v.as_str()) {
                match item_type {
                    "function" => functions.push(item_obj),
                    "event" => events.push(item_obj),
                    "error" => errors.push(item_obj),
                    _ => {}
                }
            }
        }

        // Check functions
        assert!(!functions.is_empty(), "Extended ABI should contain functions");
        for func_obj in &functions {
            // Verify selector field exists and is a string
            assert!(func_obj.contains_key("selector"), "Function should have a selector field");
            let selector = func_obj.get("selector").unwrap();
            assert!(selector.is_string(), "Selector should be a string");
            let selector_str = selector.as_str().unwrap();
            assert!(selector_str.starts_with("0x"), "Selector should start with 0x");
            assert_eq!(
                selector_str.len(),
                10,
                "Selector should be 10 characters (0x + 8 hex chars)"
            );

            // Verify signature field exists and is a string
            assert!(func_obj.contains_key("signature"), "Function should have a signature field");
            let signature = func_obj.get("signature").unwrap();
            assert!(signature.is_string(), "Signature should be a string");
            let sig_str = signature.as_str().unwrap();
            assert!(sig_str.contains("("), "Signature should contain opening parenthesis");
            assert!(sig_str.contains(")"), "Signature should contain closing parenthesis");
        }

        // Check events if present
        for event_obj in &events {
            // Events should have selector (topic0) and signature
            assert!(event_obj.contains_key("selector"), "Event should have a selector field");
            assert!(event_obj.contains_key("signature"), "Event should have a signature field");
        }

        // Check errors if present
        for error_obj in &errors {
            // Errors should have selector and signature
            assert!(error_obj.contains_key("selector"), "Error should have a selector field");
            assert!(error_obj.contains_key("signature"), "Error should have a signature field");
        }
    }
}
