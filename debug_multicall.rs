use alloy::primitives::hex;

fn main() {
    // First test case calldata
    let calldata1 = "0x1749e1e3000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000813ccee6e0fc0fbc506f834122c7c082cd4c33f0000000000000000000000000000000000000000000000000000000000176a2400000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000044585e33b000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

    let bytes1 = hex::decode(&calldata1[2..]).unwrap();
    println!("Test 1 selector: 0x{}", hex::encode(&bytes1[0..4]));
    println!("Test 1 length: {}", bytes1.len());

    // Second test case calldata
    let calldata2 = "0x252dba42000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000069c8ebef7752407cc5818a099b1fcad65d5eee990000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000470a0823100000000000000000000000000000000000000000000000000000000";

    let bytes2 = hex::decode(&calldata2[2..]).unwrap();
    println!("\nTest 2 selector: 0x{}", hex::encode(&bytes2[0..4]));
    println!("Test 2 length: {}", bytes2.len());
}
